download mongo community
install it with compass

add it to system variables
    - windows + s > sysdm.cpl > advanced > enviroment variables > system variables > PATH > edit > new > C:\Program Files\MongoDB\Server\8.0\bin

sure that mongod is run
    > mongod --version
    
run locall mongodb server in compass by
    mongodb://localhost:27017

----------------------------------------------

mongoDB > Database > CollectionS > DocumentS > fieldS

--------------------------

types of fields(data)

| Type                                          | Example                                          | Description                             |
| --------------------------------------------- | ------------------------------------------------ | --------------------------------------- |
| **String**                                    | `"name": "Alice"`                                | UTF-8 string (most common)              |
| **Number (Int32, Int64, Double, Decimal128)** | `"age": 30`, `"score": 4.5`                      | Supports multiple numeric types         |
| **Boolean**                                   | `"isActive": true`                               | `true` or `false`                       |
| **Date**                                      | `"createdAt": ISODate("2025-08-10T00:00:00Z")`   | Stored in ISODate format                |
| **Null**                                      | `"middleName": null`                             | Represents missing or unknown           |
| **Array**                                     | `"tags": ["tech", "AI"]`                         | List of values (can be mixed types)     |
| **Embedded Document (Object)**                | `"address": { "city": "Cairo", "zip": "12345" }` | Nested document inside another          |
| **ObjectId**                                  | `"_id": ObjectId("64d4e884d5f7ef4f1a2a34b3")`    | Unique identifier generated by MongoDB  |
| **Binary Data**                               | `"file": BinData(0, "base64...")`                | Store files, images, etc.               |
| **Code**                                      | `"logic": Code("function() { return true; }")`   | JavaScript code                         |
| **Regular Expression**                        | `"pattern": /abc/i`                              | Regex for pattern matching              |
| **Timestamp**                                 | `"ts": Timestamp(1628771234, 1)`                 | Used for internal ops (replication)     |
| **Decimal128**                                | `"price": NumberDecimal("99.99")`                | High precision decimal (financial apps) |
| **MinKey / MaxKey**                           | Used in range queries only                       | Represents lowest/highest BSON values   |


ex:
{
  "_id": ObjectId("64d4e884d5f7ef4f1a2a34b3"),
  "name": "Alice",
  "age": 30,
  "isActive": true,
  "email": null,
  "tags": ["tech", "ai", "ml"],
  "createdAt": ISODate("2025-08-10T12:00:00Z"),
  "balance": NumberDecimal("12345.67"),
  "address": {
    "city": "Cairo",
    "zip": "12345"
  }
}

---------------
Query :
    *** $ne, $lt, $gt, $lte, $gte, $in:[.., .., ..] , $nin:[.., .., ..]

ex : 
    {year: { $gte:2022 }}

CRUD : Create, Read, Update, Delete